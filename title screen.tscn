<<<<<<< Updated upstream
[gd_scene load_steps=2 format=2]

[ext_resource path="res://title screen.gd" type="Script" id=1]
=======
[gd_scene load_steps=16 format=2]

[ext_resource path="res://title screen.gd" type="Script" id=1]
[ext_resource path="res://title.png" type="Texture" id=2]
[ext_resource path="res://light.png" type="Texture" id=3]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec2 direction = vec2(1, 0);
uniform float speed = 0.1;
uniform sampler2D noise;
uniform sampler2D noise2;
uniform sampler2D Color;


void fragment()
{
	vec4 blend = texture(noise, UV + ( direction * speed * TIME));
	vec4 blend2 = texture(noise2, vec2(blend.r + TIME/10f,blend.g));
	vec4 col = texture(Color, vec2(blend2.r,0f));
	
	COLOR = col;
}"

[sub_resource type="Gradient" id=7]
colors = PoolColorArray( 0.172852, 0.0881138, 0, 1, 0.34082, 0.178398, 0.247872, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
seamless = true
noise = SubResource( 5 )

[sub_resource type="OpenSimplexNoise" id=9]

[sub_resource type="NoiseTexture" id=10]
noise = SubResource( 9 )
noise_offset = Vector2( 0.024, 0 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/direction = Vector2( 1, 0 )
shader_param/speed = 0.1
shader_param/noise = SubResource( 6 )
shader_param/noise2 = SubResource( 10 )
shader_param/Color = SubResource( 8 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform float height = 3.0;
uniform float frequency = 20.0;
uniform float speed = 3.0;
uniform sampler2D col;

void vertex() {
 VERTEX.y += height * sin((frequency * UV.x) + (speed * TIME));
}

uniform vec2 fill_tex_offset = vec2(0.0);
uniform vec2 fill_tex_scale = vec2(1.0);
uniform sampler2D fill_tex;
uniform vec4 base_color: hint_color = vec4(1.0,1.0,0.0,1.0);
uniform vec4 fill_brighten_color: hint_color = vec4(0.0,0.0,1.0,0.2);
uniform float cutoff: hint_range(0.0,1.0) = 0.5;
uniform vec4 outline_color: hint_color = vec4(1.0,0.0,0.0,1.0);

void fragment() {
	vec4 fill_tex_color = texture(fill_tex, (UV + fill_tex_offset) * fill_tex_scale);
	
	vec4 fill_tex_color_new = vec4(mix(fill_tex_color,fill_brighten_color,fill_brighten_color.a));
	vec4 not_working_tex_color = texture(TEXTURE, UV);
	vec4 own_texture_color = vec4(COLOR.rgb,not_working_tex_color.a); //workaround because DynamicFonts are weird -> need to use COLOR instead of TEXTURE
	float own_texture_color_cutoff = step(own_texture_color.r,cutoff);
	
	vec4 colored_fill = vec4(own_texture_color.rgb * fill_tex_color.a * base_color.rgb,own_texture_color.a);
	vec4 new_colored_fill = vec4(mix(colored_fill.rgb,fill_brighten_color.rgb,fill_brighten_color.a),colored_fill.a);
	vec3 merged_color = mix(colored_fill.rgb + new_colored_fill.rgb, outline_color.rgb, own_texture_color_cutoff);
	COLOR = vec4(merged_color,colored_fill.a);
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/height = 1.0
shader_param/frequency = 5.0
shader_param/speed = 3.0
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 1, 1 )
shader_param/base_color = Color( 1, 0.392157, 0, 1 )
shader_param/fill_brighten_color = Color( 0, 0, 1, 0.2 )
shader_param/cutoff = 0.5
shader_param/outline_color = Color( 1, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 11 )
shader_param/height = 1.5
shader_param/frequency = 4.0
shader_param/speed = 3.0
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 1, 1 )
shader_param/base_color = Color( 0.431373, 0.345098, 0.286275, 1 )
shader_param/fill_brighten_color = Color( 0, 0, 1, 0.2 )
shader_param/cutoff = 0.709
shader_param/outline_color = Color( 0.8, 0.654902, 0.654902, 1 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 11 )
shader_param/height = 2.0
shader_param/frequency = 5.0
shader_param/speed = 3.0
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 0.1, 8 )
shader_param/base_color = Color( 0.396078, 0.396078, 0.211765, 1 )
shader_param/fill_brighten_color = Color( 1, 0.486275, 0, 0.294118 )
shader_param/cutoff = 0.5
shader_param/outline_color = Color( 1, 0, 0, 1 )
shader_param/fill_tex = ExtResource( 3 )
>>>>>>> Stashed changes

[node name="title screen" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 4 )
margin_right = 1024.0
margin_bottom = 600.0

[node name="Label2" type="Label" parent="."]
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 95.0
margin_top = 134.0
margin_right = 95.0
margin_bottom = 134.0
rect_scale = Vector2( 3, 3 )
text = "Newell W. Smith's Dice Dungeon of Despair"

[node name="Label3" type="Label" parent="."]
material = SubResource( 13 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 507.0
margin_top = 553.0
margin_right = 507.0
margin_bottom = 553.0
rect_scale = Vector2( 3, 3 )
text = "By Smith Game Industries"

[node name="start game" type="Button" parent="."]
material = SubResource( 2 )
margin_left = -156.0
margin_top = 181.0
margin_right = 176.0
margin_bottom = 261.0
rect_scale = Vector2( 4, 4 )
text = "Start Game"
flat = true

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 124.0
margin_top = 100.0
margin_right = -124.0
margin_bottom = -100.0

[node name="TextureRect" type="TextureRect" parent="VBoxContainer"]
<<<<<<< Updated upstream
margin_right = 776.0
stretch_mode = 4

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer"]
margin_top = 4.0
margin_right = 776.0
margin_bottom = 400.0
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="VBoxContainer/HBoxContainer"]
margin_right = 386.0
margin_bottom = 396.0
=======
visible = false
margin_right = 1022.0
margin_bottom = 570.0
rect_scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 2 )
stretch_mode = 4

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer"]
margin_right = 1022.0
margin_bottom = 598.0
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="VBoxContainer/HBoxContainer"]
margin_right = 509.0
margin_bottom = 598.0
>>>>>>> Stashed changes
size_flags_horizontal = 3
size_flags_vertical = 3
alignment = 1

<<<<<<< Updated upstream
[node name="start game" type="Button" parent="VBoxContainer/HBoxContainer/VBoxContainer"]
margin_top = 188.0
margin_right = 386.0
margin_bottom = 208.0
flat = true

[node name="Label" type="Label" parent="VBoxContainer/HBoxContainer/VBoxContainer/start game"]
anchor_right = 1.0
anchor_bottom = 1.0
text = "Start Game"

[node name="CenterContainer" type="CenterContainer" parent="VBoxContainer/HBoxContainer"]
margin_left = 390.0
margin_right = 776.0
margin_bottom = 396.0
=======
[node name="CenterContainer" type="CenterContainer" parent="VBoxContainer/HBoxContainer"]
margin_left = 513.0
margin_right = 1022.0
margin_bottom = 598.0
>>>>>>> Stashed changes
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TextureRect" type="TextureRect" parent="VBoxContainer/HBoxContainer/CenterContainer"]
<<<<<<< Updated upstream
margin_left = 193.0
margin_top = 198.0
margin_right = 193.0
margin_bottom = 198.0
=======
margin_left = 254.0
margin_top = 299.0
margin_right = 254.0
margin_bottom = 299.0
>>>>>>> Stashed changes

[connection signal="pressed" from="start game" to="." method="_on_button_pressed"]
