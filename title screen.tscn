[gd_scene load_steps=16 format=2]

[ext_resource path="res://title screen.gd" type="Script" id=1]
[ext_resource path="res://title.png" type="Texture" id=2]

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

uniform sampler2D color;
uniform sampler2D noise;
uniform sampler2D noise2;

void fragment()
{
	vec4 res = texture(noise,UV);
	vec4 res2 = texture(noise2,vec2(res.r,res.g + TIME /10f));
	COLOR = texture(color,vec2(res2.r,0f));
}"

[sub_resource type="Gradient" id=3]
colors = PoolColorArray( 0.172363, 0.0807953, 0.126132, 1, 0.355957, 0.260015, 0.260015, 1 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 3 )

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=15]
noise = SubResource( 5 )

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=16]
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 13 )
shader_param/color = SubResource( 14 )
shader_param/noise = SubResource( 15 )
shader_param/noise2 = SubResource( 16 )

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;

uniform vec2 fill_tex_offset = vec2(0.0);
uniform vec2 fill_tex_scale = vec2(1.0);
uniform sampler2D fill_tex;
uniform vec4 base_color: hint_color = vec4(1.0,1.0,0.0,1.0);
uniform vec4 fill_brighten_color: hint_color = vec4(0.0,0.0,1.0,0.2);
uniform float cutoff: hint_range(0.0,1.0) = 0.5;
uniform vec4 outline_color: hint_color = vec4(1.0,0.0,0.0,1.0);


uniform float height = 3.0;
uniform float frequency = 20.0;
uniform float speed = 3.0;

void vertex() {
 VERTEX.y += height * sin((frequency * UV.x) + (speed * TIME));
}

void fragment() {
	vec4 fill_tex_color = texture(fill_tex, (UV + fill_tex_offset) * fill_tex_scale);
	
	vec4 fill_tex_color_new = vec4(mix(fill_tex_color,fill_brighten_color,fill_brighten_color.a));
	vec4 not_working_tex_color = texture(TEXTURE, UV);
	vec4 own_texture_color = vec4(COLOR.rgb,not_working_tex_color.a); //workaround because DynamicFonts are weird -> need to use COLOR instead of TEXTURE
	float own_texture_color_cutoff = step(own_texture_color.r,cutoff);
	
	vec4 colored_fill = vec4(own_texture_color.rgb * fill_tex_color.a * base_color.rgb,own_texture_color.a);
	vec4 new_colored_fill = vec4(mix(colored_fill.rgb,fill_brighten_color.rgb,fill_brighten_color.a),colored_fill.a);
	vec3 merged_color = mix(colored_fill.rgb + new_colored_fill.rgb, outline_color.rgb, own_texture_color_cutoff);
	COLOR = vec4(merged_color,colored_fill.a);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 17 )
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 1, 1 )
shader_param/base_color = Color( 0.454902, 0.454902, 0.235294, 1 )
shader_param/fill_brighten_color = Color( 0, 0, 1, 0.2 )
shader_param/cutoff = 0.5
shader_param/outline_color = Color( 1, 0, 0, 1 )
shader_param/height = 1.0
shader_param/frequency = 20.0
shader_param/speed = 5.0

[sub_resource type="Shader" id=18]
code = "shader_type canvas_item;

uniform vec2 fill_tex_offset = vec2(0.0);
uniform vec2 fill_tex_scale = vec2(1.0);
uniform sampler2D fill_tex;
uniform vec4 base_color: hint_color = vec4(1.0,1.0,0.0,1.0);
uniform vec4 fill_brighten_color: hint_color = vec4(0.0,0.0,1.0,0.2);
uniform float cutoff: hint_range(0.0,1.0) = 0.5;
uniform vec4 outline_color: hint_color = vec4(1.0,0.0,0.0,1.0);


uniform float height = 3.0;
uniform float frequency = 20.0;
uniform float speed = 3.0;

void vertex() {
 VERTEX.y += height * sin((frequency * UV.x) + (speed * TIME));
}

void fragment() {
	vec4 fill_tex_color = texture(fill_tex, (UV + fill_tex_offset) * fill_tex_scale);
	
	vec4 fill_tex_color_new = vec4(mix(fill_tex_color,fill_brighten_color,fill_brighten_color.a));
	vec4 not_working_tex_color = texture(TEXTURE, UV);
	vec4 own_texture_color = vec4(COLOR.rgb,not_working_tex_color.a); //workaround because DynamicFonts are weird -> need to use COLOR instead of TEXTURE
	float own_texture_color_cutoff = step(own_texture_color.r,cutoff);
	
	vec4 colored_fill = vec4(own_texture_color.rgb * fill_tex_color.a * base_color.rgb,own_texture_color.a);
	vec4 new_colored_fill = vec4(mix(colored_fill.rgb,fill_brighten_color.rgb,fill_brighten_color.a),colored_fill.a);
	vec3 merged_color = mix(colored_fill.rgb + new_colored_fill.rgb, outline_color.rgb, own_texture_color_cutoff);
	COLOR = vec4(merged_color,colored_fill.a);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 18 )
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 1, 1 )
shader_param/base_color = Color( 0.901961, 0.286275, 0.458824, 1 )
shader_param/fill_brighten_color = Color( 0, 0, 1, 0.2 )
shader_param/cutoff = 0.5
shader_param/outline_color = Color( 1, 0, 0, 1 )
shader_param/height = 0.5
shader_param/frequency = 40.0
shader_param/speed = 10.0

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 18 )
shader_param/fill_tex_offset = Vector2( 0, 0 )
shader_param/fill_tex_scale = Vector2( 1, 1 )
shader_param/base_color = Color( 0.294118, 0.290196, 0.313726, 1 )
shader_param/fill_brighten_color = Color( 0, 0, 1, 0.2 )
shader_param/cutoff = 0.5
shader_param/outline_color = Color( 1, 0, 0, 1 )
shader_param/height = 1.5
shader_param/frequency = 20.0
shader_param/speed = 5.0

[node name="title screen" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="VBoxContainer" type="VBoxContainer" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 1.0
margin_top = 1.0
margin_right = -1.0
margin_bottom = -1.0

[node name="TextureRect" type="TextureRect" parent="VBoxContainer"]
margin_right = 1022.0
margin_bottom = 570.0
texture = ExtResource( 2 )
stretch_mode = 4

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer"]
margin_top = 574.0
margin_right = 1022.0
margin_bottom = 598.0
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="VBoxContainer/HBoxContainer"]
margin_right = 509.0
margin_bottom = 24.0
size_flags_horizontal = 3
size_flags_vertical = 3
alignment = 1

[node name="CenterContainer" type="CenterContainer" parent="VBoxContainer/HBoxContainer"]
margin_left = 513.0
margin_right = 1022.0
margin_bottom = 24.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TextureRect" type="TextureRect" parent="VBoxContainer/HBoxContainer/CenterContainer"]
margin_left = 254.0
margin_top = 12.0
margin_right = 254.0
margin_bottom = 12.0

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 1024.0
margin_bottom = 600.0

[node name="Label3" type="Label" parent="."]
material = SubResource( 10 )
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -2523.0
margin_top = -325.0
margin_right = -2032.0
margin_bottom = 675.0
rect_scale = Vector2( 4, 4 )
text = "Start Game"
align = 1

[node name="start game" type="Button" parent="."]
margin_left = 279.0
margin_top = 294.0
margin_right = 788.0
margin_bottom = 314.0
flat = true

[node name="Label2" type="Label" parent="."]
material = SubResource( 11 )
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -2515.0
margin_top = -530.0
margin_right = -2024.0
margin_bottom = 470.0
rect_scale = Vector2( 4, 4 )
text = "Newell W. Smith's Dungeon of Despair"
align = 1

[node name="Label" type="Label" parent="."]
material = SubResource( 12 )
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -2380.0
margin_top = -73.0
margin_right = -1889.0
margin_bottom = 927.0
rect_scale = Vector2( 4, 4 )
text = "Created By Smith Industries"
align = 1

[connection signal="pressed" from="start game" to="." method="_on_button_pressed"]
